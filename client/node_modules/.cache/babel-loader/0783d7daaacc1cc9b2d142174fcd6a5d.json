{"ast":null,"code":"var _jsxFileName = \"C:\\\\Clone Projects\\\\Chat-Application-using-SocketIO\\\\client\\\\src\\\\components\\\\Signup\\\\Signup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport NavBar from '../NavBar/NavBar';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport Spinner from '../Spinner/Spinner';\nimport './Signup.css';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      loading: false,\n      errorMessage: ''\n    };\n\n    this.sendDetails = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      let data = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      axios.post('http://localhost:5000/login', data).then(res => {\n        console.log(res);\n\n        if (res.data.errorMessage) {\n          this.setState({\n            errorMessage: res.data.errorMessage,\n            loading: false\n          });\n        } else {\n          this.props.setStatus(data.email);\n          this.setState({\n            errorMessage: ''\n          });\n          this.props.history.push('/join');\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.setEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.setPassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.setConfirmPassword = event => {\n      this.setState({\n        confirmPassword: event.target.value\n      });\n    };\n  }\n\n  render() {\n    let renderingComponent = null;\n\n    if (this.state.loading) {\n      renderingComponent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    } else {\n      let errorComponent = null;\n\n      if (this.state.errorMessage) {\n        errorComponent = React.createElement(ErrorMessage, {\n          message: this.state.errorMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      }\n\n      renderingComponent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"belowNavbarComponent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, errorComponent, React.createElement(\"form\", {\n        className: \"signup-form\",\n        onSubmit: this.sendDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"E-Mail\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        value: this.state.email,\n        onChange: this.setEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        value: this.state.password,\n        onChange: this.setPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"confirmPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"confirmPassword\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        id: \"confirmPassword\",\n        value: this.state.confirmPassword,\n        onChange: this.setConfirmPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Signup\"))));\n    }\n\n    return [renderingComponent];\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["C:/Clone Projects/Chat-Application-using-SocketIO/client/src/components/Signup/Signup.js"],"names":["React","Component","connect","axios","NavBar","ErrorMessage","Spinner","Signup","state","email","password","confirmPassword","loading","errorMessage","sendDetails","event","preventDefault","setState","data","post","then","res","console","log","props","setStatus","history","push","catch","err","setEmail","target","value","setPassword","setConfirmPassword","render","renderingComponent","errorComponent","mapStateToProps","isAuthenticated","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport NavBar from '../NavBar/NavBar';\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nimport './Signup.css';\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        loading: false,\r\n        errorMessage: ''\r\n    }\r\n\r\n    sendDetails = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true});\r\n        let data = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        axios.post('http://localhost:5000/login', data)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.errorMessage) {\r\n                    this.setState({errorMessage: res.data.errorMessage, loading: false});\r\n                }\r\n                else {\r\n                    this.props.setStatus(data.email);\r\n                    this.setState({errorMessage: ''});\r\n                    this.props.history.push('/join');\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    setEmail = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    setPassword = (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    setConfirmPassword = (event) => {\r\n        this.setState({confirmPassword: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        let renderingComponent = null;\r\n        if(this.state.loading) {\r\n            renderingComponent = (\r\n                <div>\r\n                    <NavBar />\r\n                    <div className=\"spinner\">\r\n                        <Spinner />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            let errorComponent = null;\r\n            if(this.state.errorMessage) {\r\n                errorComponent = <ErrorMessage message={this.state.errorMessage} />\r\n            }\r\n            renderingComponent = (\r\n                <div>\r\n                    <NavBar />\r\n                    <div className=\"belowNavbarComponent\">\r\n                        {errorComponent}\r\n                        <form className=\"signup-form\" onSubmit={this.sendDetails}>\r\n                            <div className=\"form-control\">\r\n                                <label htmlFor=\"email\">E-Mail</label>\r\n                                <input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.setEmail}></input>\r\n                            </div>\r\n                            <div className=\"form-control\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.setPassword}></input>\r\n                            </div>\r\n                            <div className=\"form-control\">\r\n                                <label htmlFor=\"confirmPassword\">confirmPassword</label>\r\n                                <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" value={this.state.confirmPassword} onChange={this.setConfirmPassword}></input>\r\n                            </div>\r\n                            <button className=\"btn\" type=\"submit\">Signup</button>\r\n                        </form>\r\n                    </div>\r\n                </div>  \r\n            );\r\n        }\r\n\r\n        return [renderingComponent];\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.isAuthenticated\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);"]},"metadata":{},"sourceType":"module"}