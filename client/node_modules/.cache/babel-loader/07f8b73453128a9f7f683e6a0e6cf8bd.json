{"ast":null,"code":"var _jsxFileName = \"C:\\\\Clone Projects\\\\Chat-Application-using-SocketIO\\\\client\\\\src\\\\components\\\\Join\\\\Join.js\";\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport NavBar from '../NavBar/NavBar';\nimport Spinner from '../Spinner/Spinner';\nimport './Join.css';\nimport axios from 'axios';\n\nclass Join extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      room: '',\n      errorMessage: '',\n      loading: false\n    };\n\n    this.verifyDetails = event => {\n      event.preventDefault();\n\n      if (!this.state.name || !this.state.room) {\n        this.setState({\n          errorMessage: 'Fields cannot be empty'\n        });\n      } else {\n        this.setState({\n          loading: true\n        });\n        axios.post('http://localhost:5000/join', {\n          name: this.state.name,\n          room: this.state.room\n        }).then(res => {\n          if (res.data.errorMessage) {\n            this.setState({\n              errorMessage: res.data.errorMessage,\n              loading: false\n            });\n          } else {\n            this.props.history.push(\"/chat?name=\".concat(this.state.name, \"&room=\").concat(this.state.room));\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.setName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.setRoom = event => {\n      this.setState({\n        room: event.target.value\n      });\n    };\n  }\n\n  render() {\n    let isAuthenticated = sessionStorage.getItem(\"isAuthenticated\");\n    let component = null;\n\n    if (isAuthenticated) {\n      if (this.state.loading) {\n        component = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(NavBar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"spinner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        })));\n      } else {\n        let errorComponent = null;\n\n        if (this.state.errorMessage) {\n          errorComponent = React.createElement(ErrorMessage, {\n            className: \"joinError\",\n            message: this.state.errorMessage,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          });\n        }\n\n        component = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(NavBar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"joinOuterContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, errorComponent, React.createElement(\"div\", {\n          className: \"joinInnerContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"joinHeading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Join A Room\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          placeholder: \"Name\",\n          className: \"joinInput\",\n          type: \"text\",\n          onChange: this.setName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          placeholder: \"Room\",\n          className: \"joinInput mt-20\",\n          type: \"text\",\n          onChange: this.setRoom,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"joinButton button mt-20\",\n          onClick: this.verifyDetails,\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Join\"))));\n      }\n    } else {\n      component = React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          errorMessage: 'Please login before you continue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      });\n    }\n\n    return component;\n  }\n\n}\n\n;\nexport default Join;","map":{"version":3,"sources":["C:/Clone Projects/Chat-Application-using-SocketIO/client/src/components/Join/Join.js"],"names":["React","Component","Link","Redirect","ErrorMessage","NavBar","Spinner","axios","Join","state","name","room","errorMessage","loading","verifyDetails","event","preventDefault","setState","post","then","res","data","props","history","push","catch","err","console","log","setName","target","value","setRoom","render","isAuthenticated","sessionStorage","getItem","component","errorComponent","pathname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBQ,KADyB,GACjB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,YAAY,EAAE,EAHV;AAIJC,MAAAA,OAAO,EAAE;AAJL,KADiB;;AAAA,SAQzBC,aARyB,GAQRC,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAG,CAAC,KAAKP,KAAL,CAAWC,IAAZ,IAAoB,CAAC,KAAKD,KAAL,CAAWE,IAAnC,EAAyC;AACrC,aAAKM,QAAL,CAAc;AAACL,UAAAA,YAAY,EAAE;AAAf,SAAd;AACH,OAFD,MAGK;AACD,aAAKK,QAAL,CAAc;AAACJ,UAAAA,OAAO,EAAE;AAAV,SAAd;AACAN,QAAAA,KAAK,CAACW,IAAN,CAAW,4BAAX,EAAyC;AACrCR,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADoB;AAErCC,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AAFoB,SAAzC,EAICQ,IAJD,CAIMC,GAAG,IAAI;AACT,cAAGA,GAAG,CAACC,IAAJ,CAAST,YAAZ,EAA0B;AACtB,iBAAKK,QAAL,CAAc;AAACL,cAAAA,YAAY,EAAEQ,GAAG,CAACC,IAAJ,CAAST,YAAxB;AAAsCC,cAAAA,OAAO,EAAE;AAA/C,aAAd;AACH,WAFD,MAGK;AACD,iBAAKS,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,sBAAsC,KAAKf,KAAL,CAAWC,IAAjD,mBAA8D,KAAKD,KAAL,CAAWE,IAAzE;AACH;AACJ,SAXD,EAYCc,KAZD,CAYOC,GAAG,IAAI;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,SAdD;AAeH;AACJ,KA/BwB;;AAAA,SAiCzBG,OAjCyB,GAiCdd,KAAD,IAAW;AACjB,WAAKE,QAAL,CAAc;AAACP,QAAAA,IAAI,EAAEK,KAAK,CAACe,MAAN,CAAaC;AAApB,OAAd;AACH,KAnCwB;;AAAA,SAqCzBC,OArCyB,GAqCdjB,KAAD,IAAW;AACjB,WAAKE,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAEI,KAAK,CAACe,MAAN,CAAaC;AAApB,OAAd;AACH,KAvCwB;AAAA;;AAyCzBE,EAAAA,MAAM,GAAG;AACL,QAAIC,eAAe,GAAGC,cAAc,CAACC,OAAf,CAAuB,iBAAvB,CAAtB;AACA,QAAIC,SAAS,GAAG,IAAhB;;AAEA,QAAIH,eAAJ,EAAqB;AACjB,UAAG,KAAKzB,KAAL,CAAWI,OAAd,EAAuB;AACnBwB,QAAAA,SAAS,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAFJ,CADJ;AAQH,OATD,MAUK;AACD,YAAIC,cAAc,GAAG,IAArB;;AACA,YAAI,KAAK7B,KAAL,CAAWG,YAAf,EAA6B;AACzB0B,UAAAA,cAAc,GAAG,oBAAC,YAAD;AAAc,YAAA,SAAS,EAAC,WAAxB;AAAoC,YAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWG,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB;AACH;;AAEDyB,QAAAA,SAAS,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKC,cADL,EAEI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK;AAAO,UAAA,WAAW,EAAC,MAAnB;AAA0B,UAAA,SAAS,EAAC,WAApC;AAAgD,UAAA,IAAI,EAAC,MAArD;AAA4D,UAAA,QAAQ,EAAE,KAAKT,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAL,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK;AAAO,UAAA,WAAW,EAAC,MAAnB;AAA0B,UAAA,SAAS,EAAC,iBAApC;AAAsD,UAAA,IAAI,EAAC,MAA3D;AAAkE,UAAA,QAAQ,EAAE,KAAKG,OAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAL,CAHJ,EAII;AAAQ,UAAA,SAAS,EAAC,yBAAlB;AAA4C,UAAA,OAAO,EAAE,KAAKlB,aAA1D;AAAyE,UAAA,IAAI,EAAC,QAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CAFJ,CAFJ,CADJ;AAcH;AACJ,KAhCD,MAiCK;AACDuB,MAAAA,SAAS,GAAG,oBAAC,QAAD;AAAU,QAAA,EAAE,EACpB;AACIE,UAAAA,QAAQ,EAAE,QADd;AAEI3B,UAAAA,YAAY,EAAE;AAFlB,SADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;AAMH;;AAED,WAAOyB,SAAP;AACH;;AAxFwB;;AAyF5B;AAED,eAAe7B,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport NavBar from '../NavBar/NavBar';\nimport Spinner from '../Spinner/Spinner';\n\nimport './Join.css';\nimport axios from 'axios';\n\nclass Join extends Component {\n    state = {\n        name: '',\n        room: '',\n        errorMessage: '',\n        loading: false\n    }\n\n    verifyDetails = (event) => {\n        event.preventDefault();\n        if(!this.state.name || !this.state.room) {\n            this.setState({errorMessage: 'Fields cannot be empty'});\n        }\n        else {\n            this.setState({loading: true});\n            axios.post('http://localhost:5000/join', {\n                name: this.state.name,\n                room: this.state.room\n            })\n            .then(res => {\n                if(res.data.errorMessage) {\n                    this.setState({errorMessage: res.data.errorMessage, loading: false});\n                }\n                else {\n                    this.props.history.push(`/chat?name=${this.state.name}&room=${this.state.room}`);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    setName = (event) => {\n        this.setState({name: event.target.value});\n    }\n\n    setRoom = (event) => {\n        this.setState({room: event.target.value});\n    }\n\n    render() {\n        let isAuthenticated = sessionStorage.getItem(\"isAuthenticated\");\n        let component = null;\n\n        if (isAuthenticated) {\n            if(this.state.loading) {\n                component = (\n                    <div>\n                        <NavBar />\n                        <div className=\"spinner\">\n                            <Spinner />\n                        </div>\n                    </div>\n                );\n            }\n            else {\n                let errorComponent = null;\n                if (this.state.errorMessage) {\n                    errorComponent = <ErrorMessage className='joinError' message={this.state.errorMessage} />\n                }\n\n                component = (\n                    <div>\n                        <NavBar />\n                        <div className=\"joinOuterContainer\">\n                            {errorComponent}\n                            <div className=\"joinInnerContainer\">\n                                <h1 className=\"joinHeading\">Join A Room</h1>\n                                <div><input placeholder=\"Name\" className=\"joinInput\" type=\"text\" onChange={this.setName} /></div>\n                                <div><input placeholder=\"Room\" className=\"joinInput mt-20\" type=\"text\" onChange={this.setRoom} /></div>\n                                <button className=\"joinButton button mt-20\" onClick={this.verifyDetails} type=\"submit\">Join</button>\n                            </div>\n                        </div>\n                    </div>\n                );\n            }\n        }\n        else {\n            component = <Redirect to={\n                {\n                    pathname: '/login',\n                    errorMessage: 'Please login before you continue'\n                }\n            } />\n        }\n\n        return component;\n    }\n};\n\nexport default Join;"]},"metadata":{},"sourceType":"module"}