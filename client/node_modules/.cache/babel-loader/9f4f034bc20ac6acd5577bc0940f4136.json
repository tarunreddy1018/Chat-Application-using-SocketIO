{"ast":null,"code":"var _jsxFileName = \"C:\\\\Clone Projects\\\\Chat-Application-using-SocketIO\\\\client\\\\src\\\\components\\\\NavBar\\\\NavBar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './NavBar.css';\n\nclass NavBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.postLogout = event => {\n      axios.post('http://localhost:5000/logout', {}, {\n        withCredentials: true\n      }).then(res => {\n        sessionStorage.removeItem(\"email\");\n        sessionStorage.removeItem(\"isAuthenticated\");\n        this.props.setStatus({\n          email: '',\n          isAuthenticated: false\n        });\n        this.props.history.push('/');\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    let Home = null;\n    let Join = null;\n    let Login = null;\n    let SignUp = null;\n    let Logout = null;\n    let isAuthenticated = sessionStorage.getItem(\"isAuthenticated\");\n\n    if (true) {\n      Home = React.createElement(\"li\", {\n        className: \"leftPart-listitem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"link\",\n        exact: true,\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Home\"));\n    }\n\n    if (isAuthenticated) {\n      Join = React.createElement(\"li\", {\n        className: \"leftPart-listitem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"link\",\n        exact: true,\n        to: \"/join\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Join\"));\n    }\n\n    if (!isAuthenticated) {\n      Login = React.createElement(\"li\", {\n        className: \"rightPart-listitem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"link\",\n        exact: true,\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Login\"));\n    }\n\n    if (!isAuthenticated) {\n      SignUp = React.createElement(\"li\", {\n        className: \"rightPart-listitem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"link\",\n        exact: true,\n        to: \"/signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Signup\"));\n    }\n\n    if (isAuthenticated) {\n      Logout = React.createElement(\"li\", {\n        className: \"rightPart-listitem link logout\",\n        onClick: this.postLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Logout\");\n    }\n\n    return React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"leftPart-itemlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, Home, Join), React.createElement(\"ul\", {\n      className: \"rightPart-itemlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, Login, SignUp, Logout)));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.isAuthenticated\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStatus: payload => {\n      dispatch({\n        type: 'FLIP-STATUS',\n        payload: payload\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar));","map":{"version":3,"sources":["C:/Clone Projects/Chat-Application-using-SocketIO/client/src/components/NavBar/NavBar.js"],"names":["React","Component","connect","NavLink","withRouter","axios","NavBar","postLogout","event","post","withCredentials","then","res","sessionStorage","removeItem","props","setStatus","email","isAuthenticated","history","push","catch","err","console","log","render","Home","Join","Login","SignUp","Logout","getItem","mapStateToProps","state","mapDispatchToProps","dispatch","payload","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\nimport './NavBar.css';\r\n\r\nclass NavBar extends Component {\r\n    postLogout = (event) => {\r\n        axios.post('http://localhost:5000/logout', {}, {\r\n            withCredentials: true\r\n        })\r\n            .then(res => {\r\n                sessionStorage.removeItem(\"email\");\r\n                sessionStorage.removeItem(\"isAuthenticated\");\r\n                this.props.setStatus({email: '', isAuthenticated: false});\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let Home = null;\r\n        let Join = null;\r\n        let Login = null;\r\n        let SignUp = null;\r\n        let Logout = null;\r\n\r\n        let isAuthenticated = sessionStorage.getItem(\"isAuthenticated\");\r\n\r\n        if (true) {\r\n            Home = (\r\n                <li className=\"leftPart-listitem\"><NavLink className=\"link\" exact to='/'>Home</NavLink></li>\r\n            );\r\n        }\r\n        if (isAuthenticated) {\r\n            Join = (\r\n                <li className=\"leftPart-listitem\"><NavLink className=\"link\" exact to='/join'>Join</NavLink></li>\r\n            );\r\n        }\r\n        if (!isAuthenticated) {\r\n            Login = (\r\n                <li className=\"rightPart-listitem\"><NavLink className=\"link\" exact to='/login'>Login</NavLink></li>\r\n            );\r\n        }\r\n        if (!isAuthenticated) {\r\n            SignUp = (\r\n                <li className=\"rightPart-listitem\"><NavLink className=\"link\" exact to='/signup'>Signup</NavLink></li>\r\n            );\r\n        }\r\n        if (isAuthenticated) {\r\n            Logout = (\r\n                <li className=\"rightPart-listitem link logout\" onClick={this.postLogout}>Logout</li>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <header className=\"header\">\r\n                <nav className=\"navBar\">\r\n                    <ul className=\"leftPart-itemlist\">\r\n                        {Home}\r\n                        {Join}\r\n                    </ul>\r\n                    <ul className=\"rightPart-itemlist\">\r\n                        {Login}\r\n                        {SignUp}\r\n                        {Logout}\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.isAuthenticated\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setStatus: (payload) => {\r\n            dispatch({type: 'FLIP-STATUS', payload: payload});\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar));"]},"metadata":{},"sourceType":"module"}