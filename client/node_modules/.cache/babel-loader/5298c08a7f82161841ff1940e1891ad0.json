{"ast":null,"code":"var _jsxFileName = \"C:\\\\Clone Projects\\\\Chat-Application-using-SocketIO\\\\client\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from '../Spinner/Spinner';\nimport './Login.css';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      loading: false\n    };\n\n    this.sendDetails = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      axios.post('/login', {\n        email,\n        password\n      }).then(res => {\n        console.log(res);\n        this.setState({\n          loading: false\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.setEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n      console.log(event.target.value);\n    };\n\n    this.setPassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n      console.log(event.target.value);\n    };\n  }\n\n  render() {\n    let renderingComponent = null;\n\n    if (this.state.loading) {\n      renderingComponent = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    } else {\n      renderingComponent = React.createElement(\"form\", {\n        className: \"login-form\",\n        onSubmit: this.sendDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"E-Mail\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        value: this.state.email,\n        onChange: this.setEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        value: this.state.password,\n        onChange: this.setPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Login\"));\n    }\n\n    return [renderingComponent];\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Clone Projects/Chat-Application-using-SocketIO/client/src/components/Login/Login.js"],"names":["React","Component","NavLink","axios","Spinner","Login","state","email","password","loading","sendDetails","event","preventDefault","setState","post","then","res","console","log","catch","err","setEmail","target","value","setPassword","render","renderingComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        loading: false\r\n    }\r\n\r\n    sendDetails = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true});\r\n        axios.post('/login', {\r\n            email,\r\n            password\r\n        }).then(res => {\r\n            console.log(res);\r\n            this.setState({loading: false});\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    setEmail = (event) => {\r\n        this.setState({email: event.target.value});\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    setPassword = (event) => {\r\n        this.setState({password: event.target.value});\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        let renderingComponent = null;\r\n        if(this.state.loading) {\r\n            renderingComponent = <Spinner />\r\n        }\r\n        else {\r\n            renderingComponent = (\r\n                <form className=\"login-form\" onSubmit={this.sendDetails}>\r\n                    <div className=\"form-control\">\r\n                        <label for=\"email\">E-Mail</label>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.setEmail}></input>\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label for=\"password\">Password</label>\r\n                        <input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.setPassword}></input>\r\n                    </div>\r\n                    <button className=\"btn\" type=\"submit\">Login</button>\r\n                </form>\r\n            );\r\n        }\r\n\r\n        return [renderingComponent];\r\n    }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}