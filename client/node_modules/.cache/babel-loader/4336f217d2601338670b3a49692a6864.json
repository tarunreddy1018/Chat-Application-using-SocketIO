{"ast":null,"code":"var _jsxFileName = \"C:\\\\Clone Projects\\\\Chat-Application-using-SocketIO\\\\client\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport NavBar from '../NavBar/NavBar';\nimport Spinner from '../Spinner/Spinner';\nimport './Login.css';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      loading: false\n    };\n\n    this.sendDetails = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      let data = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      axios.post('http://localhost:5000/login', data).then(res => {\n        console.log(this.props.isAuthenticated);\n        this.props.setState(data.email);\n        this.setState({\n          loading: false\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.setEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n      console.log(event.target.value);\n    };\n\n    this.setPassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n      console.log(event.target.value);\n    };\n  }\n\n  render() {\n    let displayHome = true;\n    let displayJoin = this.props.isAuthenticated;\n    let displayLogin = !this.props.isAuthenticated;\n    let displaySignUp = !this.props.isAuthenticated;\n    let displayLogout = this.props.isAuthenticated;\n    let renderingComponent = null;\n\n    if (this.state.loading) {\n      renderingComponent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        displayHome: displayHome,\n        displayJoin: displayJoin,\n        displayLogin: displayLogin,\n        displaySignUp: displaySignUp,\n        displayLogout: displayLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    } else {\n      renderingComponent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        displayHome: displayHome,\n        displayJoin: displayJoin,\n        displayLogin: displayLogin,\n        displaySignUp: displaySignUp,\n        displayLogout: displayLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"login-form\",\n        onSubmit: this.sendDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"E-Mail\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        value: this.state.email,\n        onChange: this.setEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        value: this.state.password,\n        onChange: this.setPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Login\")));\n    }\n\n    return [renderingComponent];\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.isAuthenticated\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setState: email => {\n      dispatch({\n        type: 'FLIP-STATUS',\n        payload: email\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Clone Projects/Chat-Application-using-SocketIO/client/src/components/Login/Login.js"],"names":["React","Component","NavLink","connect","axios","NavBar","Spinner","Login","state","email","password","loading","sendDetails","event","preventDefault","setState","data","post","then","res","console","log","props","isAuthenticated","catch","err","setEmail","target","value","setPassword","render","displayHome","displayJoin","displayLogin","displaySignUp","displayLogout","renderingComponent","mapStateToProps","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport NavBar from '../NavBar/NavBar';\r\n\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        loading: false\r\n    }\r\n\r\n    sendDetails = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true});\r\n        let data = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n\r\n        axios.post('http://localhost:5000/login', data)\r\n            .then(res => {\r\n                console.log(this.props.isAuthenticated);\r\n                this.props.setState(data.email);\r\n                this.setState({loading: false});\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    setEmail = (event) => {\r\n        this.setState({email: event.target.value});\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    setPassword = (event) => {\r\n        this.setState({password: event.target.value});\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        let displayHome = true;\r\n        let displayJoin = this.props.isAuthenticated;\r\n        let displayLogin = !this.props.isAuthenticated;\r\n        let displaySignUp = !this.props.isAuthenticated;\r\n        let displayLogout = this.props.isAuthenticated;\r\n\r\n        let renderingComponent = null;\r\n        if(this.state.loading) {\r\n            renderingComponent = (\r\n                <div>\r\n                    <NavBar \r\n                        displayHome={displayHome} \r\n                        displayJoin={displayJoin}  \r\n                        displayLogin={displayLogin} \r\n                        displaySignUp={displaySignUp}\r\n                        displayLogout={displayLogout} />\r\n                    <Spinner />\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            renderingComponent = (\r\n                <div>\r\n                    <NavBar \r\n                        displayHome={displayHome} \r\n                        displayJoin={displayJoin}  \r\n                        displayLogin={displayLogin} \r\n                        displaySignUp={displaySignUp}\r\n                        displayLogout={displayLogout} />\r\n\r\n                    <form className=\"login-form\" onSubmit={this.sendDetails}>\r\n                        <div className=\"form-control\">\r\n                            <label for=\"email\">E-Mail</label>\r\n                            <input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.setEmail}></input>\r\n                        </div>\r\n                        <div className=\"form-control\">\r\n                            <label for=\"password\">Password</label>\r\n                            <input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.setPassword}></input>\r\n                        </div>\r\n                        <button className=\"btn\" type=\"submit\">Login</button>\r\n                    </form>\r\n                </div>  \r\n            );\r\n        }\r\n\r\n        return [renderingComponent];\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.isAuthenticated\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setState: (email) => {\r\n            dispatch({type: 'FLIP-STATUS', payload: email});\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}