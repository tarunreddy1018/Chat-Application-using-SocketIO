{"ast":null,"code":"var _jsxFileName = \"C:\\\\Clone Projects\\\\Chat-Application-using-SocketIO\\\\client\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport NavBar from '../NavBar/NavBar';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport Spinner from '../Spinner/Spinner';\nimport './Login.css';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      loading: false,\n      errorMessage: ''\n    };\n\n    this.sendDetails = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      let data = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      axios.post('http://localhost:5000/login', data, {\n        withCredentials: true\n      }).then(res => {\n        if (res.data.errorMessage) {\n          this.setState({\n            errorMessage: res.data.errorMessage,\n            loading: false\n          });\n        } else {\n          this.props.setStatus({\n            email: data.email,\n            isAuthenticated: true\n          });\n          this.setState({\n            errorMessage: ''\n          });\n          sessionStorage.setItem(\"email\", data.email);\n          sessionStorage.setItem(\"isAuthenticated\", true);\n          this.props.history.push('/join');\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.setEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n      console.log(event.target.value);\n    };\n\n    this.setPassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n      console.log(event.target.value);\n    };\n  }\n\n  render() {\n    let renderingComponent = null;\n\n    if (this.state.loading) {\n      renderingComponent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    } else {\n      let errorComponent = null;\n\n      if (this.state.errorMessage) {\n        errorComponent = React.createElement(ErrorMessage, {\n          message: this.state.errorMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      }\n\n      renderingComponent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"belowNavbarComponent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, errorComponent, React.createElement(\"form\", {\n        className: \"login-form\",\n        onSubmit: this.sendDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"E-Mail\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        value: this.state.email,\n        onChange: this.setEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        value: this.state.password,\n        onChange: this.setPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Login\"))));\n    }\n\n    return [renderingComponent];\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.isAuthenticated\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStatus: payload => {\n      dispatch({\n        type: 'FLIP-STATUS',\n        payload: payload\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Clone Projects/Chat-Application-using-SocketIO/client/src/components/Login/Login.js"],"names":["React","Component","connect","axios","NavBar","ErrorMessage","Spinner","Login","state","email","password","loading","errorMessage","sendDetails","event","preventDefault","setState","data","post","withCredentials","then","res","props","setStatus","isAuthenticated","sessionStorage","setItem","history","push","catch","err","console","log","setEmail","target","value","setPassword","render","renderingComponent","errorComponent","mapStateToProps","mapDispatchToProps","dispatch","payload","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport NavBar from '../NavBar/NavBar';\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        loading: false,\r\n        errorMessage: ''\r\n    }\r\n\r\n    sendDetails = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true});\r\n        let data = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        axios.post('http://localhost:5000/login', data, {\r\n            withCredentials: true\r\n        })\r\n            .then(res => {\r\n                if(res.data.errorMessage) {\r\n                    this.setState({errorMessage: res.data.errorMessage, loading: false});\r\n                }\r\n                else {\r\n                    this.props.setStatus({email: data.email, isAuthenticated: true});\r\n                    this.setState({errorMessage: ''});\r\n                    sessionStorage.setItem(\"email\", data.email);\r\n                    sessionStorage.setItem(\"isAuthenticated\", true);\r\n                    this.props.history.push('/join');\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    setEmail = (event) => {\r\n        this.setState({email: event.target.value});\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    setPassword = (event) => {\r\n        this.setState({password: event.target.value});\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        let renderingComponent = null;\r\n        if(this.state.loading) {\r\n            renderingComponent = (\r\n                <div>\r\n                    <NavBar />\r\n                    <div className=\"spinner\">\r\n                        <Spinner />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            let errorComponent = null;\r\n            if(this.state.errorMessage) {\r\n                errorComponent = <ErrorMessage message={this.state.errorMessage} />\r\n            }\r\n            renderingComponent = (\r\n                <div>\r\n                    <NavBar />\r\n                    <div className=\"belowNavbarComponent\">\r\n                        {errorComponent}\r\n                        <form className=\"login-form\" onSubmit={this.sendDetails}>\r\n                            <div className=\"form-control\">\r\n                                <label htmlFor=\"email\">E-Mail</label>\r\n                                <input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.setEmail}></input>\r\n                            </div>\r\n                            <div className=\"form-control\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.setPassword}></input>\r\n                            </div>\r\n                            <button className=\"btn\" type=\"submit\">Login</button>\r\n                        </form>\r\n                    </div>\r\n                </div>  \r\n            );\r\n        }\r\n\r\n        return [renderingComponent];\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.isAuthenticated\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setStatus: (payload) => {\r\n            dispatch({type: 'FLIP-STATUS', payload: payload});\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}