{"ast":null,"code":"import _slicedToArray from \"C:\\\\Clone Projects\\\\Chat-Application-using-SocketIO\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Clone Projects\\\\Chat-Application-using-SocketIO\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { Redirect } from 'react-router-dom';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Messages from '../Messages/Messages';\nimport Input from '../Input/Input';\nimport UsersList from '../UsersList/UsersList';\nimport './Chat.css';\nvar socket;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        message = _useState6[0],\n        setMessage = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        messages = _useState8[0],\n        setMessages = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        users = _useState10[0],\n        setUsers = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        errorMessage = _useState12[0],\n        setErrorMessage = _useState12[1];\n\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n    socket.on('roomInfo', roomInfo => {\n      setUsers(roomInfo.users);\n      setMessages(roomInfo.messages);\n    });\n    socket.on('errorMessage', error => {\n      if (error.id === socket.id) {\n        setErrorMessage(error.errorMessage);\n        socket.emit('disconnect');\n        socket.off();\n      }\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', room, name, message, () => setMessage(''));\n    }\n  };\n\n  let isAuthenticated = sessionStorage.getItem(\"isAuthenticated\");\n  let component = null;\n\n  if (isAuthenticated) {\n    if (errorMessage !== '') {\n      component = React.createElement(Redirect, {\n        to: {\n          pathname: '/join',\n          errorMessage: errorMessage\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    } else {\n      component = React.createElement(\"div\", {\n        className: \"outerContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"innerContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(InfoBar, {\n        room: room,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Messages, {\n        messages: messages,\n        name: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"onlineList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Users Online\")), React.createElement(\"div\", {\n        className: \"container2 scrollBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(UsersList, {\n        users: users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })))));\n    }\n  } else {\n    component = React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        errorMessage: 'Please login before you continue'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    });\n  }\n\n  return component;\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Clone Projects/Chat-Application-using-SocketIO/client/src/components/Chat/Chat.js"],"names":["React","useEffect","useState","queryString","io","ScrollToBottom","Redirect","InfoBar","Messages","Input","UsersList","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","users","setUsers","errorMessage","setErrorMessage","ENDPOINT","parse","search","emit","on","roomInfo","error","id","off","sendMessage","event","preventDefault","isAuthenticated","sessionStorage","getItem","component","pathname"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport queryString from 'query-string'\nimport io from 'socket.io-client';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { Redirect } from 'react-router-dom';\n\nimport InfoBar from '../InfoBar/InfoBar';\nimport Messages from '../Messages/Messages';\nimport Input from '../Input/Input';\nimport UsersList from '../UsersList/UsersList';\n\nimport './Chat.css';\n\nvar socket;\n\nconst Chat = ({ location }) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const ENDPOINT = 'localhost:5000';\n\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search);\n\n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name, room });\n        \n    }, [ENDPOINT, location.search]);\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            setMessages([...messages, message]);\n        });\n\n        socket.on('roomInfo', (roomInfo) => {\n            setUsers(roomInfo.users);\n            setMessages(roomInfo.messages);\n        });\n\n        socket.on('errorMessage', (error) => {\n            if(error.id === socket.id) {\n                setErrorMessage(error.errorMessage);\n                socket.emit('disconnect');\n                socket.off();\n            }\n        });\n\n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n    }, [messages]);\n\n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if (message) {\n            socket.emit('sendMessage', room, name , message, () => setMessage(''));\n        }\n    };\n\n    let isAuthenticated = sessionStorage.getItem(\"isAuthenticated\");\n    let component = null;\n\n    if(isAuthenticated) {\n        if(errorMessage !== '') {\n            component = (\n                    <Redirect to={{\n                                pathname: '/join',\n                                errorMessage: errorMessage\n                    }} />\n            );\n        }\n        else {\n            component = (\n                <div className=\"outerContainer\">\n                    <div className=\"innerContainer\">\n                        <div className=\"container\">\n                            <InfoBar room={room} />\n                            <Messages messages={messages} name={name} />\n                            <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n                        </div>\n                        <div className=\"onlineList\">\n                            <div className=\"heading\">\n                                <h2>Users Online</h2>\n                            </div>\n                            <div className=\"container2 scrollBottom\">\n                                <UsersList users={users} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n    else {\n        component = <Redirect to={\n            {\n                pathname: '/login',\n                errorMessage: 'Please login before you continue' \n            }\n        } />\n    }\n   \n    return component;\n};\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}